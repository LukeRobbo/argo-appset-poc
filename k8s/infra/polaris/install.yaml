apiVersion: v1
kind: Namespace
metadata:
  name: polaris
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: polaris
  name: polaris
  namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: polaris
  name: polaris
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  - alertmanagers
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: polaris
  name: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polaris
subjects:
- kind: ServiceAccount
  name: polaris
  namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: polaris
  name: polaris-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: polaris
  namespace: polaris
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: polaris
  name: polaris-dashboard
  namespace: polaris
spec:
  ports:
  - name: http-dashboard
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: polaris
    component: dashboard
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: polaris
    component: dashboard
  name: polaris-dashboard
  namespace: polaris
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polaris
      component: dashboard
  template:
    metadata:
      labels:
        app: polaris
        component: dashboard
    spec:
      containers:
      - command:
        - polaris
        - dashboard
        - --port
        - "8080"
        image: quay.io/fairwinds/polaris:4.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        name: dashboard
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 150m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector: null
      serviceAccountName: polaris
      tolerations: null
